#!/bin/bash

export PATH=/sbin:/usr/sbin

script_status=0

set_token() {
    ip token set $1 dev $2
    status=$?
    if [ $script_status -eq 0 ]; then
        script_status=$status
    fi
}

<%
def get_token_for_interface(interface)
  if @exclude_interfaces.include?(interface)
    return nil
  end

  if @manage_main_if_only && interface != scope.lookupvar('::main_interface')
    return nil
  end

  token = nil
  facts = [ "::custom_ipv6_token_#{interface}", "::default_ipv6_token_#{interface}"]

  facts.each do |fact|
    if !scope.lookupvar(fact).to_s.empty?
      token = scope.lookupvar(fact)
      break
    end
  end

  token
end

interfaces = scope.lookupvar('::interfaces')

tokens = Hash.new
interfaces.split(',').each do |interface|
  token = get_token_for_interface(interface)
  if token
    tokens[interface] = token
  end
end

tokens.keys.each do |interface| -%>
set_token <%= tokens[interface] %> <%= interface %>
<%
end

if tokens.length == 0
%>
# Info: puppet-module-ipv6token didn't find any interfaces to set ipv6 tokens for.
#
# Interfaces found: <%= interfaces %>
# Excluded interfaces: <%= @exclude_interfaces %>
# Manage main interface only: <%= @manage_main_if_only %>
# Main interface: <%= scope.lookupvar('::main_interface') %>
<%- interfaces.split(',').each do |interface| %>
# default_ipv6_token_<%= interface %>: <%= scope.lookupvar("::default_ipv6_token_#{interface}") -%>
<%- end %>
<% end -%>

exit $script_status
